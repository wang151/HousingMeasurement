buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
    }
}
allprojects{
    repositories{
        jcenter()
    }
}

apply plugin: 'com.android.application'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
}

android {
    signingConfigs {
        release {
            keyAlias 'lfjia'
            keyPassword '123456'
            //storeFile file('D:/Develop/Sign/lfjia.keystore')
            storePassword '123456'
        }
    }
    compileSdkVersion 21
    buildToolsVersion "27.0.0"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {
        
        minSdkVersion 21
        targetSdkVersion 23
        applicationId "com.example.mjbimsdk"
        ndk {
            moduleName "jiamm"
            stl "c++_static"

            //for debug
            //abiFilters "armeabi"
            //for release
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
        }
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }
//    sourceSets {
//        main {
//            jni.srcDirs = ["../sdk"]
//        }
//    }
//    externalNativeBuild {
//        ndkBuild {
//            path '../sdk/jni/Android.mk'
//        }
//    }
    productFlavors {
    }
}
